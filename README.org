A Different Audio Spectrum Analyzer for KDE Plasma

[[../../wiki/Previews][file:../../wiki/plasmoid/preview.png]] 

** Contents                                                        :noexport:
:PROPERTIES:
:TOC:      this
:END:
  - [[#requirements][Requirements]]
  -  [[#install-the-required-dependencies][Install the required dependencies]]
    -  [[#arch-Linux][Arch Linux]]
    -  [[#ubuntu][Ubuntu]]
  -  [[#installation][Installation]]
    -  [[#via-kde-store][Via KDE Store]]
    -  [[#via-command-line][Via Command Line]]
    -  [[#via-aur][Via AUR]]
    -  [[#drag-panon-widget-to-your-panel-eg-latte-dock][Drag panon widget to your panel]]
  -  [[#visual-effects][Visual Effects]]
    -  [[#debugging-shaders][Debugging Shaders]]
  -  [[#troubleshooting][Troubleshooting]]
  -  [[#credits][Credits]]

** Requirements

|               | Minimal version required |
|---------------+--------------------------|
| OpenGL / GLSL | 3.0 / 1.30               |
| QtQuick       | 2.0                      |

** Install the required dependencies
   
*** Arch Linux
#+BEGIN_SRC sh
sudo pacman -S qt5-websockets \
    python-docopt python-numpy python-pillow python-pyaudio python-cffi python-websockets 
#+END_SRC

*** Ubuntu
#+BEGIN_SRC sh
sudo apt-get install qml-module-qt-websockets \
    python3-docopt python3-numpy python3-pyaudio python3-cffi python3-websockets python3-pil 
#+END_SRC

** Installation
*** Via KDE Store

1. Open the "Add Widgets" dialog of your desktop
2. Go to "Get New Widgets" in the bottom
3. Click "Download New Plasma Widgets"
4. Search for "panon"
5. Click "Install"

*** Via Command Line

#+BEGIN_SRC sh
git clone https://github.com/rbn42/panon.git
cd panon/kde
# Download SoundCard and hsluv-glsl
git submodule update --init
# To install
kpackagetool5 -t Plasma/Applet --install plasmoid
# To upgrade. Backup your modified shaders before upgrading.
kpackagetool5 -t Plasma/Applet --upgrade plasmoid
#+END_SRC

*** Via AUR
[[https://aur.archlinux.org/packages/plasma5-applets-panon/][plasma5-applets-panon]] and [[https://aur.archlinux.org/packages/plasma5-applets-panon-git/][plasma5-applets-panon-git]] are available for ArchLinux. 

If you want to modify shaders, installing panon as a system package is not a preferred solution right now, because then the modification will require write permission in =/usr/share/plasma/plasmoids/panon=.

*** Drag panon widget to your panel (eg. [[https://github.com/psifidotos/Latte-Dock][latte-dock]]).
[[file:../../wiki/plasmoid/step1.png]]
[[file:../../wiki/plasmoid/step2.png]]

** Visual Effects

Visual effects are stored in [[kde/plasmoid/contents/shaders/]]. Providing panon is installed in your home directory, it is the same directory of =~/.local/share/plasma/plasmoids/panon/contents/shaders/=. You can add your own visual effect to this directory.

A visual effect may consist a single shader file with its name ended with =.frag=, like [[kde/plasmoid/contents/shaders/solid.frag][solid.frag]], or 2 shader files =image.frag= and =buffer.frag=, like [[file:kde/plasmoid/contents/shaders/spectrogram][spectrogram/]]. The single shader file, or =image.frag=, is the main shader. It produces the visual effect of the applet. =buffer.frag= produces buffer data =iChannel2=, which is explained below.

*** Shader API and Shadertoy.com

[[https://gamedevelopment.tutsplus.com/tutorials/a-beginners-guide-to-coding-graphics-shaders--cms-23313][What is a shader? And a turtorial for beginners.]]

Shadertoy.com is a cross-browser online community and tool for creating and sharing shaders through WebGL, from where you can find many wonderful works shared by kind people. By default, these works are licensed under [[https://www.shadertoy.com/terms][a Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License]]. And [[https://www.shadertoy.com/view/Md23DV][here]] is an interactive tutorial for shadertoy.com.

Panon's shader API is designed to be similar to shadertoy.com. Many of the works can be copied directly to panon, providing you add =#version 130= to the shader file's first line. [[file:kde/plasmoid/contents/shaders/example-shadertoy.frag][example-shadertoy.frag]] is such an example. But all these works were designed to show in browsers, so they won't look good in tiny space like a panel.

These shadertoy-like uniforms are provided. 
| Uniform Name | Description                                                                                                     |
|--------------+-----------------------------------------------------------------------------------------------------------------|
| iResolution  | Width and heigh of the applet                                                                                   |
| iTime        |                                                                                                                 |
| iTimeDelta   |                                                                                                                 |
| iFrame       |                                                                                                                 |
| iMouse       | Mouse position                                                                                                  |
| iChannel0    | Wave data: Red channel corresponds to left audio channel, green channel corresponds to right audio channel.     |
| iChannel1    | Spectrum data: Red channel corresponds to left audio channel, green channel corresponds to right audio channel. |
| iChannel2    | Buffer data: Output of =buffer.frag=, has the same width and height of the applet.                              |
Both =image.frag= (or the single main shader) and =buffer.frag= can access these uniforms.

*** Debugging Shaders

Neither KDE Panel nor Latte-Dock shows the errors caused by the shaders. To catch the error messages, =plasma-sdk= is required. To debug your shader, you must put your shader file in [[kde/plasmoid/contents/shaders/]], and then start plasmoidviewer in a console. 

#+BEGIN_SRC sh
cd ./kde/
#Providing plasma-sdk is installed
plasmoidviewer --applet ./plasmoid/
#+END_SRC
In plasmoidviewer, go to the configuration window and pick your own shader. 
Then plasmoidviewer will run your shader and show the errors, if exist, in the console.

** Background transparency
To achieve background transparency, after installing panon, go to ~/.local/share/plasma/plasmoids/panon/contents/ui/main.qml in your home directory,
alter the following part and add the line marked below:

#+BEGIN_SRC sh
    Plasmoid.preferredRepresentation: Plasmoid.compactRepresentation
 ++ Plasmoid.backgroundHints: PlasmaCore.Types.NoBackground
#+END_SRC

** Troubleshooting
** Credits
| Files                                                                                                               | Source                                                                                           | Licensed under                                       |
|---------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------+------------------------------------------------------|
| [[file:panon/source.py][source.py]] and [[file:panon/spectrum.py][spectrum.py]]                                     | adapted from [[https://github.com/ajalt/PyVisualizer][PyVisualizer]]                             |                                                      |
| =hsv2rgb= in [[file:kde/plasmoid/contents/shaders/utils.fsh][utils.fsh]]                                            | copied from [[https://gist.github.com/patriciogonzalezvivo/114c1653de9e3da6e1e3][GLSL-color.md]] |                                                      |
| [[file:kde/plasmoid/contents/shaders/example-shadertoy.frag][example-shadertoy.frag]]                               | copied from [[https://www.shadertoy.com/view/lldyDs][shadertoy]]                                 | [[https://www.shadertoy.com/terms][CC BY-NC-SA 3.0]] |
| [[file:kde/plasmoid/contents/shaders/example-shadertoy-fractal-tiling.frag][example-shadertoy-fractal-tiling.frag]] | copied from [[example-shadertoy-fractal-tiling.frag][shadertoy]]                                 | [[https://www.shadertoy.com/terms][CC BY-NC-SA 3.0]] |
